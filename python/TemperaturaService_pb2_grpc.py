# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import TemperaturaService_pb2 as TemperaturaService__pb2


class TemperaturaServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CadastrarTemperatura = channel.unary_unary(
                '/temperatura_service.TemperaturaService/CadastrarTemperatura',
                request_serializer=TemperaturaService__pb2.Temperatura.SerializeToString,
                response_deserializer=TemperaturaService__pb2.StatusReply.FromString,
                )
        self.GetTemperaturaPorId = channel.unary_unary(
                '/temperatura_service.TemperaturaService/GetTemperaturaPorId',
                request_serializer=TemperaturaService__pb2.Id.SerializeToString,
                response_deserializer=TemperaturaService__pb2.Temperatura.FromString,
                )
        self.GetTemperaturaPorData = channel.unary_unary(
                '/temperatura_service.TemperaturaService/GetTemperaturaPorData',
                request_serializer=TemperaturaService__pb2.Data.SerializeToString,
                response_deserializer=TemperaturaService__pb2.TemperaturaList.FromString,
                )
        self.GetTemperaturaPorLocalizacao = channel.unary_unary(
                '/temperatura_service.TemperaturaService/GetTemperaturaPorLocalizacao',
                request_serializer=TemperaturaService__pb2.Localizacao.SerializeToString,
                response_deserializer=TemperaturaService__pb2.TemperaturaList.FromString,
                )


class TemperaturaServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CadastrarTemperatura(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTemperaturaPorId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTemperaturaPorData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTemperaturaPorLocalizacao(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TemperaturaServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CadastrarTemperatura': grpc.unary_unary_rpc_method_handler(
                    servicer.CadastrarTemperatura,
                    request_deserializer=TemperaturaService__pb2.Temperatura.FromString,
                    response_serializer=TemperaturaService__pb2.StatusReply.SerializeToString,
            ),
            'GetTemperaturaPorId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTemperaturaPorId,
                    request_deserializer=TemperaturaService__pb2.Id.FromString,
                    response_serializer=TemperaturaService__pb2.Temperatura.SerializeToString,
            ),
            'GetTemperaturaPorData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTemperaturaPorData,
                    request_deserializer=TemperaturaService__pb2.Data.FromString,
                    response_serializer=TemperaturaService__pb2.TemperaturaList.SerializeToString,
            ),
            'GetTemperaturaPorLocalizacao': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTemperaturaPorLocalizacao,
                    request_deserializer=TemperaturaService__pb2.Localizacao.FromString,
                    response_serializer=TemperaturaService__pb2.TemperaturaList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'temperatura_service.TemperaturaService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TemperaturaService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CadastrarTemperatura(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/temperatura_service.TemperaturaService/CadastrarTemperatura',
            TemperaturaService__pb2.Temperatura.SerializeToString,
            TemperaturaService__pb2.StatusReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTemperaturaPorId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/temperatura_service.TemperaturaService/GetTemperaturaPorId',
            TemperaturaService__pb2.Id.SerializeToString,
            TemperaturaService__pb2.Temperatura.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTemperaturaPorData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/temperatura_service.TemperaturaService/GetTemperaturaPorData',
            TemperaturaService__pb2.Data.SerializeToString,
            TemperaturaService__pb2.TemperaturaList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTemperaturaPorLocalizacao(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/temperatura_service.TemperaturaService/GetTemperaturaPorLocalizacao',
            TemperaturaService__pb2.Localizacao.SerializeToString,
            TemperaturaService__pb2.TemperaturaList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
